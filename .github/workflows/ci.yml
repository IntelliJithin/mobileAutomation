name: Mobile automation test
 
on:
  workflow_dispatch:
 
jobs:
  build:
    runs-on: ubuntu-latest
 
    steps:
      - name: ‚¨áÔ∏è Checkout Code
        uses: actions/checkout@v4
 
      - name: üê¢ Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
 
      - name: Clean node_modules and package-lock.json
        run: |
          rm -rf node_modules
          rm package-lock.json
          npm install # Reinstall dependencies cleanly
 
      - name: üèóÔ∏è Install Dependencies
        run: npm install
 
      - name: Install Appium and drivers
        run: |
          echo "Checking currently installed Appium driver..."
          if ! command -v appium &> /dev/null; then
           echo "Appium not found. Installing..."
           npm install -g appium
          fi
          
          INSTALLED_DRIVERS=$(appium driver list --installed 2>&1 || echo "Error: Appium command failed")

          if echo "$INSTALLED_DRIVERS" | grep -q "uiautomator2"; then
           echo "uiautomator2 is already installed. Skipping reinstallation."
          else
           echo "uiautomator2 not found. Reinstalling Appium and drivers..."
           appium driver install uiautomator2
          fi
                    
      - name: Install Java
        run: sudo apt-get install -y openjdk-11-jdk
 
      - name: Install Android SDK and Setup Path
        run: |
          echo "Installing Android SDK & dependencies..."
          sudo apt-get update
          sudo apt-get install -y wget unzip
 
          echo "Download and extract Android command-line tools..."
          wget https://dl.google.com/android/repository/commandlinetools-linux-8092744_latest.zip
          mkdir -p $HOME/android-sdk/cmdline-tools
          unzip -q commandlinetools-linux-8092744_latest.zip -d $HOME/android-sdk/cmdline-tools
          mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest
 
          echo "Set environment variables..."
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$PATH" >> $GITHUB_ENV
 
          echo "Accepting licenses..."
          yes |sdkmanager --licenses || echo "License acceptance failed"

          echo "Installing required SDK packages..."
          sdkmanager --install "platform-tools" "build-tools;30.0.3" "platoforms;android-29" "System-images;android-29;google_apis;x86_64"

          echo "Listing installed SDK components..."
          sdkmanager --list

      - name: Verify SDK Installation
        run: |
          echo "Checking Android SDK paths..."
          ls -la $ANDROID_HOME
          ls -la $ANDROID_HOME/platforms
          ls -la $ANDROID_HOME/system-images/android-29

          echo "Checking available SDK packages..."
          sdkmanager --list || echo "sdkmanager command failed"
 
      - name: Set up Android Emulator
        run: |
          echo "üìå Checking available system images..."
          sdkmanager --list | grep "system-images"
 
          echo "üìå Creating AVD..."
          echo no | avdmanager create avd -n test_emulator -k "system-images;android-29;google_apis;x86_64" --device "pixel"
 
          echo "üöÄ Starting emulator..."
          nohup emulator -avd test_emulator -no-window -noaudio -no-boot-anim -gpu swiftshader_indirect &
 
          echo "‚è≥ Waiting for device to boot..."
          adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
 
          echo "‚úÖ Emulator is ready!"
 
      - name: List installed Appium drivers
        run: appium driver list --installed
 
      - name: Fix Permissions
        run: chmod +x node_modules/.bin/wdio
 
      - name: üß™ Run WebdriverIO Tests
        run: npx wdio wdio.conf.js
 
      - name: üì¶ Upload Logs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: logs
          path: logs
